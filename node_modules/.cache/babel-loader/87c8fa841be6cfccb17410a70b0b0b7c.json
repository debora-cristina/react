{"ast":null,"code":"import _objectSpread from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\App\\\\first-react-app\\\\src\\\\containers\\\\BurguerBuilder\\\\BurguerBuilder.js\";\nimport React, { Component } from 'react';\nimport Auxiliar from '../../hoc/Auxiliar/Auxiliar.js';\nimport Burger from '../../components/Burger/Burger.js';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls.js';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/OrderSummary/OrderSummary.js';\nimport axios from '../../axios-orders.js';\nimport Spinner from '../../components/UI/Spinner/Spinner.js';\nimport withErrorHandler from '../../hoc/Layout/withErrorHandler/withErrorHandler.js';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/actions';\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar BurguerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurguerBuilder, _Component);\n\n  function BurguerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurguerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurguerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      //ingredients:null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    _this.addIngredientHandler = function (type) {\n      console.log('adicionou');\n      var oldCount = _this.state.ingredients[type];\n      var updateCount = oldCount + 1;\n\n      var updateIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updateIngredients[type] = updateCount;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updateIngredients\n      });\n\n      _this.updatePurchaseState(updateIngredients);\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      var updateCount = oldCount - 1;\n\n      var updateIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updateIngredients[type] = updateCount;\n      var priceRedux = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice - priceRedux;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updateIngredients\n      });\n\n      _this.updatePurchaseState(updateIngredients);\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancelHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      // this.setState({loading: true});\n      var queryParams = [];\n\n      for (var i in _this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(_this.state.ingredients[i]));\n      }\n\n      queryParams.push('price=' + _this.state.totalPrice);\n      var queryString = queryParams.join('&');\n\n      _this.props.history.push({\n        pathname: '/checkout',\n        search: '?' + queryString\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurguerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/ingredients.json').then(function (response) {\n        _this2.setState({\n          ingredients: response.data\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          error: true\n        });\n      });\n    }\n  }, {\n    key: \"updatePurchaseState\",\n    value: function updatePurchaseState(ingredients) {\n      var sum = Object.keys(ingredients).map(function (igKey) {\n        return ingredients[igKey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.props.ings);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = null;\n      var burger = this.state.error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Ingredients can't be loaded!\") : React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      });\n\n      if (this.props.ings) {\n        burger = React.createElement(Auxiliar, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(Burger, {\n          ingredients: this.props.ings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          purchasable: this.state.purchasable,\n          ordered: this.purchaseHandler,\n          price: this.state.totalPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }));\n        orderSummary = React.createElement(OrderSummary, {\n          ingredients: this.props.ings,\n          price: this.state.totalPrice,\n          purchaseCancelled: this.purchaseCancelHandler,\n          purchaseContinued: this.purchaseContinueHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        });\n      } // {salad: true, meat: false, ...}\n\n\n      return React.createElement(Auxiliar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurguerBuilder;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ings: state.ingredients\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIngredientAdded: function onIngredientAdded(ingName) {\n      return dispatch({\n        type: actionTypes.ADD_INGREDIENTS,\n        ingredientName: ingName\n      });\n    },\n    onIngredientRemoved: function onIngredientRemoved(ingName) {\n      return dispatch({\n        type: actionTypes.REMOVE_INGREDIENTS,\n        ingredientName: ingName\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurguerBuilder, axios));","map":{"version":3,"sources":["D:\\react\\App\\first-react-app\\src\\containers\\BurguerBuilder\\BurguerBuilder.js"],"names":["React","Component","Auxiliar","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","connect","actionTypes","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurguerBuilder","state","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","console","log","oldCount","ingredients","updateCount","updateIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceRedux","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","get","then","response","data","catch","sum","Object","keys","map","igKey","reduce","el","disabledInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","mapDispatchToProps","dispatch","ingName","ADD_INGREDIENTS","ingredientName","REMOVE_INGREDIENTS"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Auxiliar from '../../hoc/Auxiliar/Auxiliar.js';\r\nimport Burger from '../../components/Burger/Burger.js';   \r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls.js';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/OrderSummary/OrderSummary.js';\r\nimport axios from '../../axios-orders.js';\r\nimport Spinner from '../../components/UI/Spinner/Spinner.js';\r\nimport withErrorHandler from '../../hoc/Layout/withErrorHandler/withErrorHandler.js';\r\nimport {connect} from 'react-redux';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\nconst INGREDIENT_PRICES ={\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurguerBuilder extends Component{\r\n\r\n    state = {\r\n        //ingredients:null,\r\n        totalPrice:4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false, \r\n        error: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/ingredients.json')\r\n        .then(response =>{\r\n            this.setState({ingredients:response.data});\r\n        })\r\n        .catch(error => { this.setState({error:true})} );\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n\r\n        const  sum = Object.keys(ingredients)\r\n        .map( igKey => {\r\n            return ingredients[igKey];\r\n        })\r\n        .reduce((sum,el) => {\r\n            return sum+ el;\r\n        }, 0);\r\n\r\n        this.setState({purchasable: sum > 0});\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n\r\n        console.log('adicionou');\r\n        const oldCount = this.state.ingredients[type];\r\n        const updateCount = oldCount+1;\r\n        const updateIngredients ={\r\n            ...this.state.ingredients\r\n        };\r\n        updateIngredients[type] = updateCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n\r\n        this.setState({totalPrice:newPrice, ingredients:updateIngredients});\r\n        this.updatePurchaseState(updateIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) =>{\r\n\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0){\r\n            return;\r\n        }\r\n        const updateCount = oldCount-1;\r\n        const updateIngredients ={\r\n            ...this.state.ingredients\r\n        };\r\n        updateIngredients[type] = updateCount;\r\n        const priceRedux = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceRedux;\r\n\r\n        this.setState({totalPrice:newPrice, ingredients:updateIngredients});\r\n        this.updatePurchaseState(updateIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing:true});\r\n    }\r\n\r\n    purchaseCancelHandler = () =>{\r\n        this.setState({purchasing:false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // this.setState({loading: true});\r\n       \r\n        const queryParams = [];\r\n        for (let i in this.state.ingredients){\r\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\r\n        }\r\n\r\n        queryParams.push('price='+ this.state.totalPrice);\r\n\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/checkout',\r\n            search: '?' + queryString\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        let orderSummary = null;\r\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\r\n\r\n        if ( this.props.ings ) {\r\n            burger = (\r\n                <Auxiliar>\r\n                    <Burger ingredients={this.props.ings} />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.onIngredientAdded}\r\n                        ingredientRemoved={this.props.onIngredientRemoved}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.state.purchasable}\r\n                        ordered={this.purchaseHandler}\r\n                        price={this.state.totalPrice} />\r\n                </Auxiliar>\r\n            );\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                price={this.state.totalPrice}\r\n                purchaseCancelled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler} />;\r\n        }\r\n        if ( this.state.loading ) {\r\n            orderSummary = <Spinner />;\r\n        }\r\n        // {salad: true, meat: false, ...}\r\n        return (\r\n            <Auxiliar>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Auxiliar>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return {\r\n        ings: state.ingredients\r\n\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngredientAdded: (ingName) => dispatch({type: actionTypes.ADD_INGREDIENTS, ingredientName: ingName }),\r\n        onIngredientRemoved: (ingName) => dispatch({type: actionTypes.REMOVE_INGREDIENTS, ingredientName: ingName })\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurguerBuilder,axios ));  "]},"metadata":{},"sourceType":"module"}