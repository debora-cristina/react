{"ast":null,"code":"import _objectSpread from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react\\\\App\\\\first-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react\\\\App\\\\first-react-app\\\\src\\\\containers\\\\BurguerBuilder\\\\BurguerBuilder.js\";\nimport React, { Component } from 'react';\nimport Auxiliar from '../../hoc/Auxiliar/Auxiliar.js';\nimport Burger from '../../components/Burger/Burger.js';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls.js';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/OrderSummary/OrderSummary.js';\nimport axios from '../../axios-orders.js';\nimport Spinner from '../../components/UI/Spinner/Spinner.js';\nimport withErrorHandler from '../../hoc/Layout/withErrorHandler/withErrorHandler.js';\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar BurguerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurguerBuilder, _Component);\n\n  function BurguerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurguerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurguerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      ingredients: null,\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    _this.addIngredientHandler = function (type) {\n      console.log('adicionou');\n      var oldCount = _this.state.ingredients[type];\n      var updateCount = oldCount + 1;\n\n      var updateIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updateIngredients[type] = updateCount;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updateIngredients\n      });\n\n      _this.updatePurchaseState(updateIngredients);\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      var updateCount = oldCount - 1;\n\n      var updateIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updateIngredients[type] = updateCount;\n      var priceRedux = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice - priceRedux;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updateIngredients\n      });\n\n      _this.updatePurchaseState(updateIngredients);\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancelHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      _this.setState({\n        loading: true\n      });\n\n      var order = {\n        ingredients: _this.state.ingredients,\n        price: _this.state.totalPrice,\n        customer: {\n          name: 'Max Schwarzmuller',\n          adress: {\n            street: 'Teststreet 1',\n            zipCode: '41351',\n            country: 'Germany'\n          },\n          email: 'teste@test.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(function (response) {\n        _this.setState({\n          loading: false,\n          purchasing: false\n        });\n      }).catch(function (error) {\n        _this.setState({\n          loading: false,\n          purchasing: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurguerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('/ingredients.json').then(function (response) {\n        _this2.setState({\n          ingredients: response.data\n        });\n      });\n    }\n  }, {\n    key: \"updatePurchaseState\",\n    value: function updatePurchaseState(ingredients) {\n      var sum = Object.keys(ingredients).map(function (igKey) {\n        return ingredients[igKey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.state.ingredients);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = React.createElement(OrderSummary, {\n        ingredients: this.state.ingredients,\n        purchaseCancelled: this.purchaseCancelHandler,\n        purchaseContinued: this.purchaseContinueHandler,\n        price: this.state.totalPrice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      });\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        });\n      }\n\n      var burguer = React.createElement(Burger, {\n        ingredients: this.state.ingredients,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n      return React.createElement(Auxiliar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, orderSummary), React.createElement(BuildControls, {\n        ingredientAdded: this.addIngredientHandler,\n        ingredientRemoved: this.removeIngredientHandler,\n        disabled: disabledInfo,\n        purchasable: this.state.purchasable,\n        price: this.state.totalPrice,\n        ordered: this.purchaseHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BurguerBuilder;\n}(Component);\n\nexport default withErrorHandler(BurguerBuilder, axios);","map":{"version":3,"sources":["D:\\react\\App\\first-react-app\\src\\containers\\BurguerBuilder\\BurguerBuilder.js"],"names":["React","Component","Auxiliar","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","withErrorHandler","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurguerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","addIngredientHandler","type","console","log","oldCount","updateCount","updateIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceRedux","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","adress","street","zipCode","country","email","deliveryMethod","post","then","response","catch","error","get","data","sum","Object","keys","map","igKey","reduce","el","disabledInfo","key","orderSummary","burguer"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Auxiliar from '../../hoc/Auxiliar/Auxiliar.js';\r\nimport Burger from '../../components/Burger/Burger.js';   \r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls.js';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/OrderSummary/OrderSummary.js';\r\nimport axios from '../../axios-orders.js';\r\nimport Spinner from '../../components/UI/Spinner/Spinner.js';\r\nimport withErrorHandler from '../../hoc/Layout/withErrorHandler/withErrorHandler.js';\r\n\r\nconst INGREDIENT_PRICES ={\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurguerBuilder extends Component{\r\n\r\n    state = {\r\n        ingredients:null,\r\n        totalPrice:4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/ingredients.json').then(response =>{\r\n            this.setState({ingredients:response.data});\r\n        });\r\n    }\r\n\r\n    updatePurchaseState(ingredients){\r\n\r\n        const  sum = Object.keys(ingredients)\r\n        .map( igKey => {\r\n            return ingredients[igKey];\r\n        })\r\n        .reduce((sum,el) => {\r\n            return sum+ el;\r\n        }, 0);\r\n\r\n        this.setState({purchasable: sum > 0});\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n\r\n        console.log('adicionou');\r\n        const oldCount = this.state.ingredients[type];\r\n        const updateCount = oldCount+1;\r\n        const updateIngredients ={\r\n            ...this.state.ingredients\r\n        };\r\n        updateIngredients[type] = updateCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n\r\n        this.setState({totalPrice:newPrice, ingredients:updateIngredients});\r\n        this.updatePurchaseState(updateIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = (type) =>{\r\n\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0){\r\n            return;\r\n        }\r\n        const updateCount = oldCount-1;\r\n        const updateIngredients ={\r\n            ...this.state.ingredients\r\n        };\r\n        updateIngredients[type] = updateCount;\r\n        const priceRedux = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceRedux;\r\n\r\n        this.setState({totalPrice:newPrice, ingredients:updateIngredients});\r\n        this.updatePurchaseState(updateIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing:true});\r\n    }\r\n\r\n    purchaseCancelHandler = () =>{\r\n        this.setState({purchasing:false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.setState({loading: true});\r\n        const order ={\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice,\r\n            customer: {\r\n                name:  'Max Schwarzmuller',\r\n                adress: {\r\n                    street: 'Teststreet 1',\r\n                    zipCode: '41351',\r\n                    country: 'Germany',\r\n                    },\r\n                    email: 'teste@test.com'\r\n                },\r\n                deliveryMethod: 'fastest'               \r\n\r\n            }\r\n        \r\n        axios.post('/orders.json', order)\r\n        .then(response => {\r\n            this.setState({loading:false, purchasing: false});\r\n        }).catch(error => {\r\n            this.setState({loading:false, purchasing: false});\r\n        \r\n        });\r\n    }\r\n\r\n    render(){   \r\n\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n\r\n        for(let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = <OrderSummary \r\n        ingredients={this.state.ingredients}\r\n        purchaseCancelled={this.purchaseCancelHandler}\r\n        purchaseContinued={this.purchaseContinueHandler}\r\n        price={this.state.totalPrice}></OrderSummary>;\r\n\r\n        if(this.state.loading){\r\n            orderSummary = <Spinner></Spinner>\r\n        }\r\n\r\n        let burguer = <Burger ingredients={this.state.ingredients}></Burger>;\r\n        \r\n\r\n        return(\r\n            <Auxiliar>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}   \r\n                </Modal>\r\n               \r\n                <BuildControls \r\n                    ingredientAdded={this.addIngredientHandler} \r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                    purchasable = {this.state.purchasable}\r\n                    price = {this.state.totalPrice}\r\n                    ordered = {this.purchaseHandler}/>\r\n\r\n            </Auxiliar>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default withErrorHandler(BurguerBuilder,axios );  "]},"metadata":{},"sourceType":"module"}